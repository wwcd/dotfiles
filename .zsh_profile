#!/bin/zsh

if [[ ! -d ~/.zplug ]]; then
  git clone https://github.com/zplug/zplug ~/.zplug
  source ~/.zplug/init.zsh && zplug update --self
else
  source ~/.zplug/init.zsh
fi

# Themes
zplug "mafredri/zsh-async", from:github, use:"async.zsh"
zplug "sindresorhus/pure", from:github, use:"pure.zsh", as:theme
PURE_GIT_PULL=1
# PURE_PROMPT_SYMBOL='»'
PURE_PROMPT_SYMBOL='>'
# PURE_PROMPT_SYMBOL='✘'
PURE_GIT_DOWN_ARROW='↓'
PURE_GIT_UP_ARROW='↑'

# Tools
zplug "stedolan/jq", from:gh-r, as:command, rename-to:jq
zplug "BurntSushi/ripgrep", from:gh-r, as:command, rename-to:rg, use:"*x86_64*musl*"
zplug "dbrgn/tealdeer", from:gh-r, as:command, rename-to:tldr, use:"*x86_64*musl*"
# zplug "sharkdp/bat", from:gh-r, as:command, rename-to:bat, use:"*linux-musl*"

# FZF
zplug "junegunn/fzf-bin", from:gh-r, as:command, rename-to:fzf, use:"*linux*amd64*"
zplug "junegunn/fzf", use:"shell/*.zsh"
FZF_DEFAULT_COMMAND='rg --files --hidden --follow --ansi'
FZF_DEFAULT_OPTS='--color=bg+:-1,bg:-1'

# J
zplug "rupa/z", use:"*.sh"
# zplug "wting/autojump", use:"bin/autojump", as:command, rename-to:autojump

# Awesome
zplug "zsh-users/zsh-syntax-highlighting", defer:2
zplug "zsh-users/zsh-completions"
zplug "zsh-users/zsh-autosuggestions"
# zplug "supercrabtree/k"

# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
  printf "Install? [y/N]: "
  if read -q; then
    echo; zplug install
  fi
fi

# Then, source plugins and add commands to $PATH
zplug load #--verbose

# Custom
unalias z 2> /dev/null
z() {
  [ $# -gt 0 ] && _z "$*" && return
  cd "$(_z -l 2>&1 | fzf $FZF_DEFAULT_OPTS --height 40% --reverse --tac --query "${*##-* }" | sed 's/^[0-9,.]* *//')"
}

# History
HISTFILE=$HOME/.zsh_history
HISTSIZE=100000
SAVEHIST=$HISTSIZE
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_REDUCE_BLANKS
setopt INC_APPEND_HISTORY
setopt SHARE_HISTORY

# misc
bindkey \^U backward-kill-line

# completion
setopt noautomenu
fpath=(~/.zsh/completion /usr/share/zsh/vendor-completions $fpath)
autoload -Uz compinit && compinit -i

# vim: sw=2 ts=2 et
